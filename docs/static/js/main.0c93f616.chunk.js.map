{"version":3,"sources":["components/InfoCard.js","components/LoginForm.js","data.js","App.js","components/View.js","serviceWorker.js","index.js"],"names":["ICON_TO_BG","thumbup","green","warning","orange","thumbsupdown","brown","thumbdown","red","avatarToIcon","avatar","Icon","color","InfoCard","card","backgroundColor","Card","style","padding","margin","CardHeader","Avatar","title","titleTypographyProps","align","subheader","subheaderTypographyProps","image","CardMedia","source","height","text","CardContent","map","Typography","variant","gutterBottom","LoginForm","props","Grid","container","spacing","direction","alignItems","justify","minHeight","item","xs","FormControl","width","paddingBottom","InputLabel","htmlFor","Select","value","city","inputProps","name","id","onChange","event","onCityChange","target","cities","MenuItem","Button","fullWidth","onClick","onSubmit","verticalList","horizontalList","dark","delhi","App","state","viewMode","this","setState","className","onBack","bind","AppBar","position","Toolbar","IconButton","edge","aria-label","GridList","cellHeight","cols","flexWrap","GridListTile","Fab","right","bottom","transition","cursor","Object","entries","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c93f616.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { red, green, orange, brown } from \"@material-ui/core/colors\";\n\nimport Icon from \"@material-ui/core/Icon\";\n\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbsUpDownIcon from '@material-ui/icons/ThumbsUpDown';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nconst ICON_TO_BG = {\n  thumbup: green[500],\n  warning: orange[500],\n  thumbsupdown: brown[500],\n  thumbdown: red[500]\n};\n\nconst avatarToIcon = avatar => {\n  if (avatar === 'thumbdown') {\n    return (<ThumbDownIcon />);\n  } else if (avatar === 'thumbup') {\n    return (<ThumbUpIcon />);\n  } else if (avatar === 'thumbsupdown') {\n    return (<ThumbsUpDownIcon />);\n  } else if (avatar === 'warning') {\n    return (<WarningIcon />);\n  }\n  return <Icon color=\"action\">{avatar}</Icon>;\n}\n\nexport default function InfoCard(card) {\n  const backgroundColor = ICON_TO_BG[card.avatar] || \"#ffffff\";\n  return (\n    <Card style={{ padding: \"2\", margin: \"2\" }}>\n      <CardHeader\n        avatar={\n          <Avatar style={{ backgroundColor }}>\n            {avatarToIcon(card.avatar)}\n          </Avatar>\n        }\n        title={card.title}\n        titleTypographyProps={{ align: \"left\" }}\n        subheader={card.subheader}\n        subheaderTypographyProps={{ align: \"left\" }}\n      />\n      {card.image ? (\n        <CardMedia\n          image={card.image.source}\n          title={card.image.title}\n          style={{ height: \"128px\" }}\n        />\n      ) : null}\n      {card.text ? (\n        <CardContent>\n          {card.text.map(text => (\n            <Typography variant=\"body1\" gutterBottom align=\"left\">\n              {text}\n            </Typography>\n          ))}\n        </CardContent>\n      ) : null}\n    </Card>\n  );\n}\n","import React from 'react';\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function LoginForm(props) {\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Grid item xs={9}>\n        <Typography variant=\"body2\" gutterBottom align=\"left\">\n          30 sec check will save your health!\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom align=\"left\">\n          Your daily dose of info about pollution around you\n        </Typography>\n        <FormControl style={{ width: \"100%\", paddingBottom: \"24px\" }}>\n          <InputLabel htmlFor=\"city\">City</InputLabel>\n          <Select\n            value={props.city}\n            inputProps={{\n              name: \"city\",\n              id: \"city\"\n            }}\n            onChange={event => {\n              props.onCityChange(event.target.value);\n            }}\n          >\n            {props.cities.map(({ name, value }) => (\n              <MenuItem value={value}>{name}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          onClick={props.onSubmit}\n        >\n          Submit\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}","export default {\n  \"abu-dhabi\": {\n    name: \"Abu Dhabi, United Arab Emirates\",\n    verticalList: [\n      {\n        avatar: \"thumbdown\",\n        title: \"Very High\",\n        image: {\n          source:\n            \"https://www.thenational.ae/image/policy:1.870538:1559713071/000_Nic203574.jpg?f=16x9&w=1200&$p$f$w=6d1749d\",\n          title: \"Abu Dhabi, United Arab Emirates\"\n        }\n      },\n      {\n        avatar: \"warning\",\n        title: \"Attention\",\n        text: [\"Avoid exercising outdoors\", \"Walk indoors in a shopping mall\"]\n      }\n    ],\n    horizontalList: [\n      {\n        title: \"Clothes\",\n        avatar: \"face\",\n        dark: true,\n        text: [\"Use a mouth mask\"]\n      },\n      {\n        title: \"Food\",\n        avatar: \"cake\",\n        dark: true,\n        text: [\"Drink clear water\"]\n      },\n      {\n        title: \"Preservatives\",\n        avatar: \"healing\",\n        dark: true,\n        text: [\"Ask your doctor\"]\n      }\n    ]\n  },\n  \"los-angeles\": {\n    name: \"Los Angeles, USA\",\n    verticalList: [\n      {\n        avatar: \"thumbsupdown\",\n        title: \"Normal\",\n        image: {\n          source:\n            \"https://thenypost.files.wordpress.com/2017/11/shutterstock_386306728.jpg?quality=90&strip=all\",\n          title: \"Los Angeles, United States of America\"\n        }\n      },\n      {\n        avatar: \"warning\",\n        title: \"Attention\",\n        text: [\"Use less energy in your home\"]\n      }\n    ],\n    horizontalList: [\n      {\n        title: \"Clothes\",\n        avatar: \"face\",\n        dark: true,\n        text: [\"Wear natural-material clothes\"]\n      },\n      {\n        title: \"Food\",\n        avatar: \"cake\",\n        dark: true,\n        text: [\"Avoid dairy products\"]\n      },\n      {\n        title: \"Preservatives\",\n        avatar: \"healing\",\n        dark: true,\n        text: [\"Check your level of calcium\"]\n      }\n    ]\n  },\n  delhi: {\n    name: \"Delhi, India\",\n    verticalList: [\n      {\n        avatar: \"thumbdown\",\n        title: \"Extremely High\",\n        image: {\n          source:\n            \"https://thenypost.files.wordpress.com/2017/11/shutterstock_386306728.jpg?quality=90&strip=all\",\n          title: \"Delhi, India\"\n        }\n      },\n      {\n        avatar: \"warning\",\n        title: \"Attention\",\n        text: [\"Avoid spending time in the city  \"]\n      }\n    ],\n    horizontalList: [\n      {\n        title: \"Clothes\",\n        avatar: \"face\",\n        dark: true,\n        text: [\"Protect all parts of your body by natural materials\"]\n      },\n      {\n        title: \"Food\",\n        avatar: \"cake\",\n        dark: true,\n        text: [\n          \"Carefully choose water, the level of its quality is extremely low\"\n        ]\n      },\n      {\n        title: \"Preservatives\",\n        avatar: \"healing\",\n        dark: true,\n        text: [\n          \"Immediatly visit doctor. Click here for find nearest aimbulance.\"\n        ]\n      }\n    ]\n  }\n};","import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nimport View from \"./components/View\";\nimport LoginForm from './components/LoginForm'\n\nimport cities from \"./data\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { viewMode: false, city: '' };\n  }\n\n  onSubmit() {\n    this.setState({\n      ...this.state,\n      viewMode: true,\n    });\n  }\n\n  onBack() {\n    this.setState({\n      ...this.state,\n      viewMode: false,\n    });\n  }\n\n  onCityChange(city) {\n    this.setState({\n      ...this.state,\n      city,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.viewMode ? (\n          View(this.onBack.bind(this), cities[this.state.city])\n        ) : (\n          <LoginForm\n            cities={Object.entries(cities).map(([value, { name }]) => ({\n              value,\n              name\n            }))}\n            city={this.state.city}\n            onSubmit={this.onSubmit.bind(this)}\n            onCityChange={this.onCityChange.bind(this)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Fab from \"@material-ui/core/Fab\";\n\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport Share from \"@material-ui/icons/Share\";\n\nimport InfoCard from \"./InfoCard.js\";\n\nexport default function View(onBack, city) {\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={onBack}\n          >\n            <ArrowBack />\n          </IconButton>\n          <Typography variant=\"h6\">{city.name}</Typography>\n        </Toolbar>\n      </AppBar>\n\n      {city.verticalList ? (\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\n          {city.verticalList.map(card => (\n            <Grid item xs={11}>\n              {InfoCard(card)}\n            </Grid>\n          ))}\n        </Grid>\n      ) : null}\n\n      {city.horizontalList ? (\n        <GridList\n          spacing={2}\n          cellHeight=\"auto\"\n          cols={1.5}\n          style={{ flexWrap: \"nowrap\" }}\n        >\n          {city.horizontalList.map(card => (\n            <GridListTile>{InfoCard(card)}</GridListTile>\n          ))}\n        </GridList>\n      ) : null}\n\n      <Fab\n        color=\"primary\"\n        aria-label=\"share\"\n        style={{\n          position: \"fixed\",\n          right: \"24px\",\n          bottom: \"24px\",\n          transition: \"all 0.2s ease-in 0s\",\n          \"z-index\": \"9999\",\n          cursor: \"pointer\"\n        }}\n      >\n        <Share />\n      </Fab>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}